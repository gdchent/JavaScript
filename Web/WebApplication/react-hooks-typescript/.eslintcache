[{"E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\index.tsx":"1","E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\App.tsx":"2","E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\components\\context\\UserContextHook.tsx":"3","E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\components\\context\\NavBar.tsx":"4","E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\components\\context\\Message.tsx":"5","E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\components\\createContext\\index.ts":"6","E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\components\\useState\\UseStateExample.tsx":"7"},{"size":219,"mtime":1609826680107,"results":"8","hashOfConfig":"9"},{"size":500,"mtime":1611208234995,"results":"10","hashOfConfig":"9"},{"size":1028,"mtime":1609827136642,"results":"11","hashOfConfig":"9"},{"size":1500,"mtime":1609827184890,"results":"12","hashOfConfig":"9"},{"size":675,"mtime":1609230223650,"results":"13","hashOfConfig":"9"},{"size":461,"mtime":1609230026355,"results":"14","hashOfConfig":"9"},{"size":1291,"mtime":1609827937865,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"dvmnrj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"18"},"E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\index.tsx",[],["37","38"],"E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\App.tsx",["39","40"],"import React, { useContext, createContext } from 'react';\nimport UserContextHook from './components/context/UserContextHook'\nimport UseStateExample from './components/useState/UseStateExample'\nimport './App.css';\n\n//如果需要2个组件之间共享状态可以使用useContext\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"content\">\n          <UserContextHook />\n          <UseStateExample />\n        </div>\n      </div>\n    </>\n\n  );\n}\nexport default App;\n","E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\components\\context\\UserContextHook.tsx",["41","42","43","44"],"import React, { useCallback, useRef, RefObject, useMemo } from 'react';\r\nimport NavBar from './NavBar'\r\nimport Message from './Message'\r\nimport context from '../createContext'\r\nconsole.log('context', context)\r\nconst { ContainerContext, NavBarContext, MessageContext } = context\r\nfunction UserContextHook() {\r\n    return (\r\n        <ContainerContext.Provider value={{\r\n            firstName: '王',\r\n            lastName: '麻子',\r\n            message: 'message'\r\n        }}>\r\n            <div>\r\n                <NavBarContext.Provider\r\n                    value={{\r\n                        navBarTitle: 'navBarTitle_2'\r\n                    }}\r\n                >\r\n                    <NavBar />\r\n                </NavBarContext.Provider>\r\n                <MessageContext.Provider value={{\r\n                    message: 'message'\r\n                }}>\r\n                    <Message />\r\n                </MessageContext.Provider>\r\n\r\n            </div>\r\n        </ContainerContext.Provider>\r\n    )\r\n}\r\nexport default UserContextHook","E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\components\\context\\NavBar.tsx",["45"],"import React, { useContext, useReducer, useEffect } from 'react'\r\nimport context from '../createContext'\r\n\r\nconst initialState = { count: 0 };\r\n\r\n\r\nfunction init(initialCount: number) {\r\n    return { count: initialCount };\r\n}\r\n\r\nfunction reducer(state: any, action: any) {\r\n    console.log('initReducer', state)\r\n    switch (action.type) {\r\n        case 'increment':\r\n            return { count: state.count + 1 };\r\n        case 'decrement':\r\n            return { count: state.count - 1 };\r\n        case 'reset':\r\n            return init(action.payload);\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\r\n\r\nfunction NavBar() {\r\n    const { ContainerContext } = context\r\n    //在最外面的组件中创建createContext，在子组件里面直接通过useContext来获取\r\n    const contextObject = useContext(ContainerContext)\r\n    console.log('子组件接收到值', contextObject)\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    console.log('state', state)\r\n    return (\r\n        <div>\r\n            <div>我是navbar组件</div>\r\n            <div style={{\r\n                cursor: 'pointer',\r\n                padding: '10px'\r\n            }} onClick={() => {\r\n                dispatch({\r\n                    type: 'increment', payload: {\r\n                        initialCount: state['count']\r\n                    }\r\n                })\r\n            }}>点击</div>\r\n            <div>响应值:{state['count']}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar","E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\components\\context\\Message.tsx",[],"E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\components\\createContext\\index.ts",["46"],"/*\r\n * @Author: chentao \r\n * @Date: 2020-12-29 15:56:06 \r\n * @Last Modified by: chentao\r\n * @Last Modified time: 2020-12-29 16:20:24\r\n */\r\nimport React from 'react'\r\nconst initValue = {\r\n}\r\nconst navInitValue={\r\n}\r\nconst ContainerContext = React.createContext(initValue)\r\nconst NavBarContext =React.createContext(navInitValue)\r\nconst MessageContext=React.createContext({})\r\nexport default{\r\n     NavBarContext,\r\n     ContainerContext,\r\n     MessageContext,\r\n}\r\n",["47","48"],"E:\\software\\react-hooks-app\\react-hooks-typescript\\src\\components\\useState\\UseStateExample.tsx",["49","50"],"/*\r\n * @Author: chentao \r\n * @Date: 2021-01-05 14:18:06 \r\n * @Last Modified by: chentao\r\n * @Last Modified time: 2021-01-05 14:25:37\r\n */\r\nimport React, { useEffect, useState } from 'react'\r\n//自定义一个useState的hooks\r\nfunction useCount(initValue: number) {\r\n    const [count, setCount] = useState(initValue)\r\n    return [\r\n        count, () => {\r\n            setCount(count + 1)\r\n        }\r\n    ]\r\n}\r\n\r\nexport default (props: any) => {\r\n    console.log('props', props)\r\n    const [count1, addCount1]: any = useCount(0)\r\n    const [count2, addCount2]: any = useCount(0)\r\n    return (\r\n        <div>\r\n            <div>UseStateExample操作</div>\r\n            <div>you are onclick {count1}次</div>\r\n            <div>you are onclick {count2}次</div>\r\n            <button\r\n                onClick={() => {\r\n                    addCount1()\r\n                }}\r\n                style={{\r\n                    cursor: 'pointer',\r\n                    padding: '3px'\r\n                }}>addCount1操作</button>\r\n            <button\r\n                onClick={() => {\r\n                    addCount2()\r\n                }}\r\n                style={{\r\n                    cursor: 'pointer',\r\n                    padding: '3px'\r\n                }}>addCount2操作</button>\r\n        </div>\r\n    )\r\n}",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":27},{"ruleId":"55","severity":1,"message":"59","line":1,"column":29,"nodeType":"57","messageId":"58","endLine":1,"endColumn":42},{"ruleId":"55","severity":1,"message":"60","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":28},{"ruleId":"55","severity":1,"message":"61","line":1,"column":30,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"62","line":1,"column":38,"nodeType":"57","messageId":"58","endLine":1,"endColumn":47},{"ruleId":"55","severity":1,"message":"63","line":1,"column":49,"nodeType":"57","messageId":"58","endLine":1,"endColumn":56},{"ruleId":"55","severity":1,"message":"64","line":1,"column":41,"nodeType":"57","messageId":"58","endLine":1,"endColumn":50},{"ruleId":"65","severity":1,"message":"66","line":15,"column":1,"nodeType":"67","endLine":19,"endColumn":2},{"ruleId":"51","replacedBy":"68"},{"ruleId":"53","replacedBy":"69"},{"ruleId":"55","severity":1,"message":"64","line":7,"column":17,"nodeType":"57","messageId":"58","endLine":7,"endColumn":26},{"ruleId":"65","severity":1,"message":"70","line":18,"column":1,"nodeType":"67","endLine":45,"endColumn":2},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","'useCallback' is defined but never used.","'useRef' is defined but never used.","'RefObject' is defined but never used.","'useMemo' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["71"],["72"],"Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]